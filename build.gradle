// 프로젝트의 플러그인 의존성 관리 설정
buildscript {
    ext { // build.gradle 의 전역변수
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 앞서 설정한 플로그인 의존성들을 적용할 것인지
// java, eclipse, org.springframework.boot, io.spring.dependency-management : 자바, 스프링부트의 필수
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // (필수) 스프링부트의 의존성들을 관리해주는 플로그인

//plugins {
//    id 'java'
//}

group 'com.gus'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

// 각종 의존성 라이브러리들을 어떤 원격 저장소에서 받을 것인지
repositories {
    mavenCentral() // 기본
    jcenter() // 직접 만든 라이브러리 업로드를 간단하게 개선한 것
}

// 프로젝트 개발에 필요한 의존성
dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'
    // 버젼을 명시하지 않아야만 맨 위에 작성한 버젼을 따름
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.boot:spring-boot-starter-oauth2-client') // 클라이언트 입장에서 소셜 기능 구현시 필요
    compile('org.springframework.boot:spring-boot-starter-data-jpa') // 추상화 라이브러리, 스프링 부트 버젼에 자동으로 맞춤
    compile('org.springframework.session:spring-session-jdbc')
    compile('org.projectlombok:lombok') // Getter, Setter 등 자동 생성
    compile('com.h2database:h2') // 인메모리 관계형 데이터베이스, 따로 설치 X, 초기화됨
    compile('org.mariadb.jdbc:mariadb-java-client')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test') // @WithMockUser 기능 위해 추가
}
